/**
 * Retrieves an externally provided setting by inspecting
 *
 * project -> system property -> environment -> defaultValue
 */
def setting(String propertyName, String envName, String defaultValue) {
	if (project.hasProperty(propertyName)) {
		return project.getProperty(propertyName)
	}
	if (System.properties[propertyName] != null) {
		return System.properties[propertyName];
	}
	if (System.getenv(envName) != null) {
		return System.getenv(envName);
	}
	return defaultValue;
}

List<String> generateCmdForOS(List<String> command) {
	List<String> res;
	
	String osname = System.getProperty("os.name", "generic").toLowerCase();
	if(osname.indexOf("win") >= 0) {
		res = new ArrayList<>();
		res.add("cmd");
		res.add("/C");
		res.addAll(command);
	} else {
		res = new ArrayList<>();
		res.add("sh")
		res.add("-c")
		res = command
	}
	return res;
}

